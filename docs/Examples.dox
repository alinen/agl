/*!

\page page1 Examples
\tableofcontents

\section primitives Built-in primitives

The following example shows how to enable fog, set colors, and draw different
primitives. The properties correspond to uniform variables in the active
shader.  This example uses per-pixel phong shading, defined
[here](https://github.com/alinen/agl/blob/main/shaders/phong.fs). The full code
is [here](https://github.com/alinen/agl/blob/main/examples/shapes.cpp).
                
\htmlonly                                                                
<video controls>
<source src="https://user-images.githubusercontent.com/259657/122495146-b81ff900-cfb7-11eb-88d3-7f12ca2a5de4.mp4" type="video/mp4"/>
No video support
</video>
\endhtmlonly                                                                

\section sec Custom meshes

\subsection subsection1 Dynamic mesh

To create a dynamic triangle mesh, override agl::TriangleMesh and call
agl::Mesh::setIsDynamic. Below, we override the agl::Plane primitive. The full
code is [here](https://github.com/alinen/agl/blob/main/examples/undulate.cpp).

\htmlonly
<video controls>
<source src="https://user-images.githubusercontent.com/259657/122494550-94f54980-cfb7-11eb-8111-b4bc5c920d00.mp4" type="video/mp4"/>
Your browser does not support video
</video>
\endhtmlonly

\subsection subsection2 Point mesh

The following example overrides agl::PointMesh` to draw a a strange attractor.
The full code is
[here](https://github.com/alinen/agl/blob/main/examples/attractor.cpp).

\htmlonly
<video controls>
<source src="https://user-images.githubusercontent.com/259657/122494655-9de61b00-cfb7-11eb-91b6-ea922be4873e.mp4" type="video/mp4">
Your browser does not support video
</video>
\endhtmlonly

\section textures Textures

Textures can be loaded using agl::Renderer::loadTexture and passed to the
active shader with agl::Renderer::texture.

\note If the same slot id is used for both textures, the new texture replaces
the old one. If multiple textures are needed, they should each have their own
slot id. 

\subsection dynamictex Dynamic Texture

Textures can be modified from your application. In the following example, the texture changes with the 'up' key. 
The full code is [here](https://github.com/alinen/agl/blob/main/examples/texture.cpp).
                                                                                
\htmlonly
<video controls>
<source src="https://user-images.githubusercontent.com/259657/122494807-a6d6ec80-cfb7-11eb-976b-18b5f8abfe9a.mp4" type="video/mp4"/>
No video support
</video>
\endhtmlonly                                                                
                                                                                
\subsection proctex Procedural texture

We can create textures directly from code. Below we draw a checker pattern
using the agl::Image class. The full code is
[here](https://github.com/alinen/agl/blob/main/examples/checker.cpp).
                                                                                
<img width="400" alt="checker" src="https://user-images.githubusercontent.com/259657/122494946-ae969100-cfb7-11eb-86e6-2b6830570594.png">
                                                                                
\subsection sprites Sprites

The following example shows how primitives using the same shader can each have
their texture.  The full code is
[here](https://github.com/alinen/agl/blob/main/examples/sprites.cpp).

<img width="400" alt="checker" src="https://raw.githubusercontent.com/alinen/agl/main/docs/img/sprites.png"/>

\subsection cubemap Cubemap

The follow code shows how to load a cubemap using agl::Renderer::texture and
agl::Renderer::loadCubemap. The full code is
[here](https://github.com/alinen/agl/blob/main/examples/cubemap.cpp).

\htmlonly
<video controls>
<source src="https://github.com/alinen/agl/raw/main/docs/img/cubemap.mp4" type="video/mp4"/>
Your browser does not support video
</video>
\endhtmlonly

\section shadertoy Shadertoy

You can write fragment programs that do ray tracing and ray marching -- like in
[shadertoy](https://www.shadertoy.com). Below we draw a quad the faces the
camera and has the same dimensions as the window. The scene is then drawn in
[glsl-raymarch.fs](https://github.com/alinen/agl/blob/main/shaders/shadertoy_raymarch_csg.fs).
The application code is
[here](https://github.com/alinen/agl/blob/main/examples/shadertoy.cpp).

\htmlonly
<video controls>
<source src="https://user-images.githubusercontent.com/259657/122495250-bd7d4380-cfb7-11eb-86a1-2ba2fb181059.mp4" type="video/mp4"/>
Your browser does not support video
</video>
\endhtmlonly

*/
